<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lenovo.lenovoscs.dao.PNMapper">
  <resultMap id="BaseResultMap" type="com.lenovo.lenovoscs.bean.PN">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pnnumber" jdbcType="INTEGER" property="pnnumber" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="pn_des" jdbcType="VARCHAR" property="pnDes" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="pn_quantity" jdbcType="INTEGER" property="pnQuantity" />
    <result column="parts_amount" jdbcType="VARCHAR" property="partsAmount" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pnnumber, number, pn_des, category, unit, price, pn_quantity, parts_amount, flag
  </sql>
  <select id="selectByExample" resultType="com.lenovo.lenovoscs.bean.PNStatus">
    <!--select pn.*
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pn,flag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>-->
    select * from pn,flag where pn.flag = flag.flag
  </select>
  <select id="selectPNByExample" parameterType="com.lenovo.lenovoscs.bean.PNExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pn
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllASNPN" parameterType="com.lenovo.lenovoscs.bean.PNExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <where>
      pn.flag = 2
    </where>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="getPNequalByExample" parameterType="java.lang.Integer"
          resultType="com.lenovo.lenovoscs.bean.PNStatus">
    select pn.id as id,pn.pnnumber as pnnumber,pn.pn_des as pnDes,pn.category as category,
    pn.unit as unit,pn.price as price,pn.pn_quantity as pnQuantity,pn.flag as flag,
    pn.parts_amount as partsAmount,flag.status as status
    from pn,mapper,asn,flag
    where pn.number = mapper.ponumber
    and asn.asnnumber = mapper.asnnumber
    and pn.flag = flag.flag
    and asn.asnnumber = #{number}
  </select>
  <select id="getPNequalPOnumber" parameterType="java.lang.Integer"
          resultType="com.lenovo.lenovoscs.bean.PNStatus">
    <!--select pn.*
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pn,po
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <where>
      pn.number = po.ponumber
    </where>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <where>
      <if test="_paramter!=null">
        pn.number = #{_paramter}
      </if>
    </where>-->
    select pn.id as id,pn.pnnumber as pnnumber,pn.pn_des as pnDes,pn.category as category,
    pn.unit as unit,pn.price as price,pn.pn_quantity as pnQuantity,pn.flag as flag,
    pn.parts_amount as partsAmount,flag.status
    from pn,mapper,flag
    where pn.number = mapper.ponumber
    and pn.flag = flag.flag
    and pn.number = #{number}
  </select>
  <select id="getPNequalivnumber" parameterType="java.lang.Integer" resultType="com.lenovo.lenovoscs.bean.PNStatus">
    select pn.id as id,pn.pnnumber as pnnumber,pn.pn_des as pnDes,pn.category as category,
    pn.unit as unit,pn.price as price,pn.pn_quantity as pnQuantity,pn.flag as flag,
    pn.parts_amount as partsAmount,flag.status
    from pn,mapper,iv,flag
    where pn.number = mapper.ponumber and iv.ivnumber = mapper.ivnumber
    and pn.flag = flag.flag
    and iv.ivnumber = #{number}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pn
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deletePNByPNnumber" parameterType="java.lang.Integer">
     delete from pn
     where pnnumber = #{pnnumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lenovo.lenovoscs.bean.PNExample">
    delete from pn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deletePNByPonumber">
    delete from pn where number = #{ponumber,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.lenovoscs.bean.PN">
    insert into pn (id, pnnumber, number,
      pn_des, category, unit,
      price, pn_quantity, parts_amount,
      flag)
    values (#{id,jdbcType=INTEGER}, #{pnnumber,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},
      #{pnDes,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR},
      #{price,jdbcType=DECIMAL}, #{pnQuantity,jdbcType=INTEGER}, #{partsAmount,jdbcType=VARCHAR},
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.lenovoscs.bean.PN">
    insert into pn
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pnnumber != null">
        pnnumber,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="pnDes != null">
        pn_des,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="pnQuantity != null">
        pn_quantity,
      </if>
      <if test="partsAmount != null">
        parts_amount,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pnnumber != null">
        #{pnnumber,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="pnDes != null">
        #{pnDes,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pnQuantity != null">
        #{pnQuantity,jdbcType=INTEGER},
      </if>
      <if test="partsAmount != null">
        #{partsAmount,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lenovo.lenovoscs.bean.PNExample" resultType="java.lang.Long">
    select count(*) from pn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectPNBypnnumber" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from pn
    <where>
      <if test="_parameter!=null">
        pnnumber = #{_parameter}
      </if>
    </where>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pn
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pnnumber != null">
        pnnumber = #{record.pnnumber,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.pnDes != null">
        pn_des = #{record.pnDes,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.pnQuantity != null">
        pn_quantity = #{record.pnQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.partsAmount != null">
        parts_amount = #{record.partsAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pn
    set id = #{record.id,jdbcType=INTEGER},
      pnnumber = #{record.pnnumber,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      pn_des = #{record.pnDes,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      pn_quantity = #{record.pnQuantity,jdbcType=INTEGER},
      parts_amount = #{record.partsAmount,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.lenovoscs.bean.PN">
    update pn
    <set>
      <if test="pnnumber != null">
        pnnumber = #{pnnumber,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="pnDes != null">
        pn_des = #{pnDes,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pnQuantity != null">
        pn_quantity = #{pnQuantity,jdbcType=INTEGER},
      </if>
      <if test="partsAmount != null">
        parts_amount = #{partsAmount,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.lenovoscs.bean.PN">
    update pn
    set pnnumber = #{pnnumber,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      pn_des = #{pnDes,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pn_quantity = #{pnQuantity,jdbcType=INTEGER},
      parts_amount = #{partsAmount,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updataPNBypnnumber" parameterType="com.lenovo.lenovoscs.bean.PN">
      update pn
    set pnnumber = #{pnnumber,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      pn_des = #{pnDes,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pn_quantity = #{pnQuantity,jdbcType=INTEGER},
      parts_amount = #{partsAmount,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where pnnumber = #{pnnumber,jdbcType=INTEGER}
  </update>
  <update id="updataPNFlagByasn">
    update pn
    set
    flag = #{flag,jdbcType=INTEGER}
    where pnnumber = #{pnnumber,jdbcType=INTEGER}
  </update>
  <update id="updataPNFlagByIV">
    update pn
    set
    flag = #{flag,jdbcType=INTEGER}
    where pnnumber = #{pnnumber,jdbcType=INTEGER}
  </update>
</mapper>
